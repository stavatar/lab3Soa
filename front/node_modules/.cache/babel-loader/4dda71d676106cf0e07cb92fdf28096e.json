{"ast":null,"code":"import axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\";\nexport const path_server = \"http://localhost:8181/LABSOA1_war/\";\nexport const path_server2 = \"http://localhost:8080/lab/tean/\"; //export  const path_server = \"http://desktop-biptr25:8085/Servlets-1.0-SNAPSHOT/\";\n//export  const path_server = \"http://localhost:8181/Servlets-1.0-SNAPSHOT\";\n\nfunction printMessages(msg) {\n  debugger;\n\n  if (msg.code === 0) {\n    NotificationManager.error(msg.data, 'Ошибка', 2000);\n  } else {\n    NotificationManager.success(msg.data, 'Успех!', 2000);\n  }\n}\n\nexport function deleteMood(mood, hist) {\n  axios.post(path_server + \"deleteAllForMood\", null, {\n    params: {\n      \"mood\": mood\n    }\n  }).then(res => {\n    const msg = res.data;\n    printMessages(msg);\n    window.location.reload();\n  });\n}\nexport function calcAverage() {\n  axios.get(path_server + \"averageSpeed\").then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n  });\n}\nexport function countMood(mood) {\n  axios.get(path_server + \"countHuman\", {\n    params: {\n      \"mood\": mood\n    }\n  }).then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n  });\n}\nexport function addObj(new_obj, hist) {\n  axios.post(path_server + \"humanBeings/\", new_obj).then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n  });\n}\nexport function addTeam(new_obj, name_team) {\n  debugger;\n  axios.post(path_server2 + \"create/id/name\", new_obj).then(res => {\n    debugger;\n    const msg = res.data;\n    debugger;\n  });\n}\nexport function onAfterDeleteRow(row) {\n  let g = row.length;\n\n  for (let i = 0; i < g; i++) {\n    axios.delete(path_server + \"humanBeings/\" + row[i]).then(res => {\n      debugger;\n      const msg = res.data;\n      printMessages(msg);\n      window.location.reload();\n    });\n  }\n\n  debugger;\n}\nexport function sendEditCell(row, cellName, cellValue) {\n  debugger;\n  axios.put(path_server + \"humanBeings\", {\n    id: row[\"id\"],\n    fieldName: cellName,\n    newValue: cellValue\n  }).then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n    window.location.reload();\n  });\n}","map":{"version":3,"sources":["/home/stavatar/IdeaProject/University/lab2SOA/labsoa/src/apiNet.js"],"names":["axios","NotificationManager","path_server","path_server2","printMessages","msg","code","error","data","success","deleteMood","mood","hist","post","params","then","res","window","location","reload","calcAverage","get","countMood","addObj","new_obj","addTeam","name_team","onAfterDeleteRow","row","g","length","i","delete","sendEditCell","cellName","cellValue","put","id","fieldName","newValue"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {NotificationManager} from \"react-notifications\";\nexport const path_server=\"http://localhost:8181/LABSOA1_war/\";\nexport const path_server2=\"http://localhost:8080/lab/tean/\";\n\n//export  const path_server = \"http://desktop-biptr25:8085/Servlets-1.0-SNAPSHOT/\";\n//export  const path_server = \"http://localhost:8181/Servlets-1.0-SNAPSHOT\";\n\n\nfunction printMessages(msg){\n    debugger;\n    if(msg.code===0){\n        NotificationManager.error( msg.data, 'Ошибка',2000);\n    }else {\n        NotificationManager.success( msg.data, 'Успех!',2000);\n    }\n}\nexport function deleteMood(mood,hist){\n    axios.post(path_server+\"deleteAllForMood\",null,{params:{\"mood\": mood}})\n        .then(res => {\n\n            const msg = res.data;\n            printMessages(msg);\n            window.location.reload();\n        })\n\n}\n\n\nexport function calcAverage(){\n    axios.get(path_server+\"averageSpeed\")\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n        })\n}\n\nexport function  countMood(mood){\n    axios.get(path_server+\"countHuman\",{params:{\"mood\": mood}})\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n        })\n}\n\nexport  function addObj(new_obj,hist){\n    axios.post(path_server+\"humanBeings/\", new_obj)\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n\n\n        })\n}\nexport  function addTeam(new_obj,name_team){\n    debugger;\n    axios.post(path_server2+\"create/id/name\", new_obj)\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            debugger;\n        })\n}\nexport  function onAfterDeleteRow(row) {\n    let g = row.length;\n    for(let i=0;i<g;i++){\n        axios.delete(path_server+\"humanBeings/\"+row[i])\n            .then(res => {\n                debugger;\n                const msg = res.data;\n                printMessages(msg);\n                window.location.reload();\n\n            })\n    }\n    debugger;\n}\nexport  function sendEditCell(row, cellName, cellValue) {\n    debugger;\n\n    axios.put(path_server+\"humanBeings\",{id:row[\"id\"],fieldName:cellName,newValue: cellValue})\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n            window.location.reload();\n        })\n\n}"]},"metadata":{},"sourceType":"module"}