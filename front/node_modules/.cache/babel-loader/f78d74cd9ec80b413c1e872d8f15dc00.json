{"ast":null,"code":"var _jsxFileName = \"/home/stavatar/IdeaProject/University/lab2SOA/labsoa/src/components/Table/Table.js\";\nimport React, { Component } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport InsertButton from 'react-bootstrap-table/lib/toolbar/InsertButton';\nimport DeleteButton from 'react-bootstrap-table/lib/toolbar/DeleteButton';\nimport '../../css/Table.css';\nimport 'react-bootstrap-table/css/react-bootstrap-table.css';\nimport axios from \"axios\";\nimport { onAfterDeleteRow, sendEditCell, addTeam, makeDepressiveTeam } from \"../../apiNet\";\nimport { withRouter } from \"react-router-dom\";\nimport { path_server } from \"../../apiNet\";\nimport { CNav, CNavItem } from \"@coreui/react\";\nimport ReactPaginate from 'react-paginate';\nimport { typeMood, typeWeapon, bool_val } from \"../../const\";\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport qs from 'qs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction formatterCar(cell, row) {\n  return cell.cool;\n}\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createCustomInsertButton = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(InsertButton, {\n          className: \"btn-padding-left-top\",\n          value: \"Create human\",\n          size: \"\",\n          onClick: () => this.props.history.push(\"/add\"),\n          children: \"Create  human\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.nameTeam,\n            onChange: this.handleChangeTeamName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InsertButton, {\n            className: \"btn-padding-left-top\",\n            value: \"Add Command\",\n            size: \"\",\n            onClick: () => {\n              debugger;\n              addTeam(this.state.selectedRow, this.state.nameTeam);\n            },\n            children: \"Create  team with selected human\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.createCustomDeleteButton = onClick => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.nameTeamForDepressive,\n          onChange: this.handleChangeTeamNameForDepressive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          size: \"\",\n          btnText: \"Make depressive team\",\n          className: \"btn-padding-left-top\",\n          onClick: e => {\n            makeDepressiveTeam(this.state.nameTeamForDepressive);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          size: \"\",\n          btnText: \"Delete selected human\",\n          className: \"btn-padding-left-top\",\n          onClick: e => {\n            onClick();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSortChange = (sortName, sortOrder) => {\n      debugger;\n      let sortFlag = sortOrder === \"asc\";\n      this.setState({\n        sort: {\n          nameField: sortName,\n          isAscending: sortFlag\n        }\n      }, this.getAllObject);\n      debugger;\n    };\n\n    axios.defaults.validateStatus = () => {\n      return true;\n    };\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleChangeSizePage = this.handleChangeSizePage.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.getAllObject = this.getAllObject.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.onSortChange = this.onSortChange.bind(this);\n    this.onRowSelect = this.onRowSelect.bind(this);\n    this.handleChangeTeamName = this.handleChangeTeamName.bind(this);\n    this.handleChangeTeamNameForDepressive = this.handleChangeTeamNameForDepressive.bind(this);\n    this.formatterCar = this.formatterCar.bind(this);\n    this.state = {\n      data: [],\n      sizePage: 10,\n      allSizeList: 1,\n      currentPage: 1,\n      sort: {\n        nameField: 'id',\n        isAscending: true\n      },\n      filter: [],\n      selectedRow: new Set(),\n      nameTeam: '',\n      nameTeamForDepressive: ''\n    };\n  }\n\n  handleChangeTeamName(event) {\n    this.setState({\n      nameTeam: event.target.value\n    });\n  }\n\n  handleChangeTeamNameForDepressive(event) {\n    this.setState({\n      nameTeamForDepressive: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.getAllObject();\n    this.timer = setInterval(() => this.getAllObject(), 100000);\n  }\n\n  componentWillUnmount() {\n    this.timer = null;\n  }\n\n  beforeClose(e) {}\n\n  handlePageClick(data) {\n    debugger;\n    let curPage = data.selected + 1;\n    this.setState({\n      currentPage: curPage\n    }, this.getAllObject);\n  }\n\n  handleChangeSizePage(event) {\n    debugger;\n    this.setState({\n      sizePage: event.target.value,\n      currentPage: 1\n    }, this.getAllObject);\n    event.preventDefault();\n  }\n\n  handleKeyPress(event) {\n    debugger;\n\n    if (event.key === \"Enter\") {\n      this.getAllObject();\n    }\n\n    event.preventDefault();\n  }\n\n  onFilterChange(filterObj) {\n    let arr = [];\n    let filterValue;\n\n    for (const key in filterObj) {\n      let current = {\n        nameField: '',\n        action: '',\n        value: ''\n      };\n      current.nameField = key;\n\n      switch (filterObj[key].type) {\n        case 'DateFilter':\n          {\n            debugger;\n            let filterValue = filterObj[key].value.date;\n            current.value = filterValue;\n            let comparator = filterObj[key].value.comparator;\n            current.action = comparator;\n            debugger;\n            break;\n          }\n\n        case 'NumberFilter':\n          {\n            debugger;\n            let filterValue = filterObj[key].value.number;\n            current.value = filterValue;\n            let comparator = filterObj[key].value.comparator;\n            current.action = comparator;\n            debugger;\n            break;\n          }\n\n        default:\n          {\n            filterValue = filterObj[key].value;\n            current.value = filterValue;\n            debugger;\n            break;\n          }\n      }\n\n      arr.push(current);\n      debugger;\n    }\n\n    this.setState({\n      filter: arr\n    }, this.getAllObject);\n  }\n\n  onAfterSaveCell(row, cellName, cellValue) {\n    debugger;\n    sendEditCell(row, cellName, cellValue);\n  }\n\n  remote(remoteObj) {\n    remoteObj.sort = true;\n    remoteObj.filter = true;\n    return remoteObj;\n  }\n\n  onRowSelect(row, isSelected, e) {\n    debugger;\n\n    if (isSelected) {\n      this.setState(({\n        selectedRow\n      }) => ({\n        selectedRow: new Set(selectedRow).add(row)\n      }));\n    } else {\n      if (this.state.selectedRow.size <= 1) {\n        this.setState(({\n          selectedRow\n        }) => ({\n          selectedRow: new Set()\n        }));\n      } else {\n        new Set(this.state.selectedRow).delete(row);\n        this.setState(({\n          selectedRow\n        }) => ({\n          selectedRow: new Set(this.state.selectedRow)\n        }));\n      }\n    }\n  }\n\n  render() {\n    const options = {\n      hideSizePerPage: true,\n      sizePerPage: 5,\n      deleteBtn: this.createCustomDeleteButton,\n      insertBtn: this.createCustomInsertButton,\n      onSortChange: this.onSortChange,\n      onFilterChange: this.onFilterChange,\n      afterDeleteRow: onAfterDeleteRow // A hook for after insert rows\n\n    };\n    const selectRowProp = {\n      mode: 'checkbox',\n      columnWidth: '2%',\n      onSelect: this.onRowSelect\n    };\n    const cellEditProp = {\n      mode: 'dbclick',\n      // 'dbclick' for trigger by double-click\n      afterSaveCell: sendEditCell,\n      blurToSave: true\n    };\n    const currentPage = Math.ceil(this.state.allSizeList / this.state.sizePage);\n    debugger;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n        remote: true,\n        data: this.state.data,\n        dataField: \"id\",\n        tdStyle: {\n          whiteSpace: 'normal'\n        },\n        insertRow: true,\n        cellEdit: cellEditProp,\n        selectRow: selectRowProp,\n        deleteRow: true,\n        options: options,\n        striped: true,\n        hover: true,\n        containerClass: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          isKey: true,\n          dataSort: true,\n          dataField: \"id\",\n          headerAlign: \"left\",\n          width: \"2%\",\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"name\",\n          dataSort: true,\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"4%\",\n          filter: {\n            type: 'TextFilter'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"impactSpeed\",\n          dataSort: true,\n          filter: {\n            type: 'NumberFilter'\n          },\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"5%\",\n          editable: {\n            type: 'number'\n          },\n          children: \"impactSpeed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"typeWeapon\",\n          dataSort: true,\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"5%\",\n          filter: {\n            type: 'SelectFilter',\n            options: typeWeapon\n          },\n          editable: {\n            type: 'select',\n            options: {\n              values: typeWeapon\n            }\n          },\n          children: \"weaponType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"typeMood\",\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"5%\",\n          dataSort: true,\n          filter: {\n            type: 'SelectFilter',\n            options: typeMood\n          },\n          editable: {\n            type: 'select',\n            options: {\n              values: typeMood\n            }\n          },\n          children: \"moodType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"X\",\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"5%\",\n          dataSort: true,\n          filter: {\n            type: 'NumberFilter'\n          },\n          editable: {\n            type: 'number'\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"Y\",\n          dataAlign: \"center\",\n          dataSort: true,\n          headerAlign: \"center\",\n          width: \"5%\",\n          filter: {\n            type: 'NumberFilter'\n          },\n          editable: {\n            type: 'number',\n            options: {\n              min: '0',\n              max: '369'\n            }\n          },\n          children: \"y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"date\",\n          dataAlign: \"center\",\n          dataSort: true,\n          headerAlign: \"center\",\n          width: \"7%\",\n          filter: {\n            type: 'DateFilter'\n          },\n          editable: {\n            type: 'date'\n          },\n          children: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"realHero\",\n          dataSort: true,\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"2%\",\n          filter: {\n            type: 'SelectFilter',\n            options: bool_val\n          },\n          editable: {\n            type: 'checkbox'\n          },\n          children: \"R\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n          dataField: \"car\",\n          dataSort: true,\n          dataAlign: \"center\",\n          headerAlign: \"center\",\n          width: \"2%\",\n          dataFormat: formatterCar,\n          filter: {\n            type: 'SelectFilter',\n            options: bool_val\n          },\n          editable: {\n            type: 'checkbox'\n          },\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CNav, {\n        className: \"background-nav justify-content-lg-between\",\n        children: [/*#__PURE__*/_jsxDEV(CNavItem, {\n          className: \" \",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"sizePage\",\n            type: \"number\",\n            onKeyPress: this.handleKeyPress,\n            value: this.state.sizePage,\n            onChange: this.handleChangeSizePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CNavItem, {\n          className: \" \",\n          children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n            previousLabel: \"← Previous\",\n            nextLabel: \"Next →\",\n            pageCount: currentPage,\n            onPageChange: this.handlePageClick,\n            containerClassName: \"pagination\",\n            previousLinkClassName: \"pagination__link\",\n            nextLinkClassName: \"pagination__link\",\n            disabledClassName: \"pagination__link--disabled\",\n            activeClassName: \"pagination__link--active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this);\n  }\n\n  getAllObject() {\n    debugger;\n    let arr_filt = JSON.stringify(this.state.filter);\n    if (arr_filt === '[]') if (arr_filt === '[]') arr_filt = null;\n    debugger;\n    axios.get(path_server + \"humanBeings\", {\n      params: {\n        sizePage: this.state.sizePage,\n        numberPage: this.state.currentPage,\n        sortField: this.state.sort.nameField,\n        isAsc: this.state.sort.isAscending,\n        filters: arr_filt\n      },\n      paramsSerializer: params => {\n        return qs.stringify(params);\n      }\n    }).then(res => {\n      debugger;\n      const msg = res.data;\n\n      if (msg.code === 1) {\n        let k = msg.data;\n        this.setState({\n          data: k,\n          allSizeList: msg.allSizeList\n        });\n      }\n    });\n  }\n\n}\n\nexport default _c = withRouter(Table);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/stavatar/IdeaProject/University/lab2SOA/labsoa/src/components/Table/Table.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","InsertButton","DeleteButton","axios","onAfterDeleteRow","sendEditCell","addTeam","makeDepressiveTeam","withRouter","path_server","CNav","CNavItem","ReactPaginate","typeMood","typeWeapon","bool_val","qs","formatterCar","cell","row","cool","Table","constructor","props","createCustomInsertButton","history","push","state","nameTeam","handleChangeTeamName","selectedRow","createCustomDeleteButton","onClick","nameTeamForDepressive","handleChangeTeamNameForDepressive","e","onSortChange","sortName","sortOrder","sortFlag","setState","sort","nameField","isAscending","getAllObject","defaults","validateStatus","handlePageClick","bind","handleChangeSizePage","handleKeyPress","onFilterChange","onRowSelect","data","sizePage","allSizeList","currentPage","filter","Set","event","target","value","componentDidMount","timer","setInterval","componentWillUnmount","beforeClose","curPage","selected","preventDefault","key","filterObj","arr","filterValue","current","action","type","date","comparator","number","onAfterSaveCell","cellName","cellValue","remote","remoteObj","isSelected","add","size","delete","render","options","hideSizePerPage","sizePerPage","deleteBtn","insertBtn","afterDeleteRow","selectRowProp","mode","columnWidth","onSelect","cellEditProp","afterSaveCell","blurToSave","Math","ceil","whiteSpace","values","min","max","arr_filt","JSON","stringify","get","params","numberPage","sortField","isAsc","filters","paramsSerializer","then","res","msg","code","k"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BootstrapTable,\n    TableHeaderColumn} from 'react-bootstrap-table';\nimport InsertButton from 'react-bootstrap-table/lib/toolbar/InsertButton';\nimport DeleteButton from 'react-bootstrap-table/lib/toolbar/DeleteButton';\nimport '../../css/Table.css';\nimport 'react-bootstrap-table/css/react-bootstrap-table.css'\nimport axios from \"axios\";\nimport {onAfterDeleteRow,sendEditCell,addTeam,makeDepressiveTeam} from \"../../apiNet\"\nimport {withRouter} from \"react-router-dom\";\nimport {path_server} from \"../../apiNet\";\nimport {CNav, CNavItem} from \"@coreui/react\";\nimport ReactPaginate from 'react-paginate';\nimport {typeMood,typeWeapon,bool_val} from \"../../const\";\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport qs from 'qs';\n\n\nfunction formatterCar(cell, row) {\n    return cell.cool;\n}\n\nclass Table extends Component {\n    constructor(props) {\n        super(props);\n        axios.defaults.validateStatus = () => {\n            return true;\n        };\n        this.handlePageClick=this.handlePageClick.bind(this);\n        this.handleChangeSizePage=this.handleChangeSizePage.bind(this);\n        this.handleKeyPress=this.handleKeyPress.bind(this);\n        this.getAllObject=this.getAllObject.bind(this);\n        this.onFilterChange=this.onFilterChange.bind(this);\n        this.onSortChange=this.onSortChange.bind(this);\n        this.onRowSelect=this.onRowSelect.bind(this);\n        this.handleChangeTeamName=this.handleChangeTeamName.bind(this);\n        this.handleChangeTeamNameForDepressive=this.handleChangeTeamNameForDepressive.bind(this);\n            this.formatterCar=this.formatterCar.bind(this);\n\n        this.state = {data:[],\n                      sizePage:10,\n                      allSizeList:1,\n                      currentPage:1,\n                      sort:{nameField:'id',isAscending:true},\n                      filter:[],\n                      selectedRow:new Set(),\n                      nameTeam:'',\n                      nameTeamForDepressive:'' } ;\n    }\n    handleChangeTeamName(event){\n        this.setState({nameTeam: event.target.value});\n\n    }\n    handleChangeTeamNameForDepressive(event){\n        this.setState({nameTeamForDepressive: event.target.value});\n\n    }\n    componentDidMount() {\n        this.getAllObject();\n        this.timer = setInterval(() => this.getAllObject(), 100000);\n\n    }\n    componentWillUnmount() {\n        this.timer = null;\n    }beforeClose(e) {}\n\n\n    handlePageClick (data){\n        debugger;\n        let curPage=data.selected+1;\n        this.setState({currentPage:curPage },this.getAllObject);\n    }\n    handleChangeSizePage(event){\n        debugger;\n        this.setState({sizePage: event.target.value,currentPage:1 },this.getAllObject);\n        event.preventDefault();\n    }\n    handleKeyPress(event){\n        debugger;\n        if (event.key === \"Enter\") {\n            this.getAllObject();\n        }\n        event.preventDefault();\n    }\n    createCustomInsertButton = () => {\n        return (\n            <div className=\"\">\n                <InsertButton\n                    className=\"btn-padding-left-top\"\n                    value='Create human'\n                    size=\"\"\n                    onClick={ () => this.props.history.push(\"/add\") }>Create  human</InsertButton>\n                <div className=\"\">\n                    <label >Name team</label>\n                    <input  type=\"text\" value={this.state.nameTeam} onChange={this.handleChangeTeamName} />\n\n                <InsertButton\n                    className=\"btn-padding-left-top\"\n                    value='Add Command'\n                    size=\"\"\n                    onClick={ () => {\n                                        debugger;\n                                        addTeam(this.state.selectedRow,this.state.nameTeam)\n                                    }\n                            }>Create  team with selected human</InsertButton>\n                </div>\n            </div>\n        );\n    }\n    createCustomDeleteButton = (onClick) => {\n        return (\n            <div className=\"\">\n                <label >Name team</label>\n                <input  type=\"text\" value={this.state.nameTeamForDepressive} onChange={this.handleChangeTeamNameForDepressive} />\n                <DeleteButton\n                    size=\"\"\n                    btnText='Make depressive team'\n                    className=\"btn-padding-left-top\"\n                    onClick={ e => { makeDepressiveTeam(this.state.nameTeamForDepressive\n                    ) }}/>\n\n                <DeleteButton\n                    size=\"\"\n                    btnText='Delete selected human'\n                    className=\"btn-padding-left-top\"\n                    onClick={ e => { onClick(); }}/>\n            </div>\n     )};\n\n    onSortChange = (sortName, sortOrder) => {\n        debugger;\n        let sortFlag = sortOrder===\"asc\";\n        this.setState({sort:{nameField:sortName,isAscending:sortFlag}},this.getAllObject);\n        debugger;\n    }\n\n    onFilterChange(filterObj) {\n        let arr=[];\n        let filterValue;\n        for (const key in filterObj) {\n            let current={nameField:'',action:'',value:''}\n            current.nameField=key;\n            switch (filterObj[key].type) {\n                case 'DateFilter':{\n                    debugger;\n                    let filterValue = filterObj[key].value.date;\n                    current.value=filterValue;\n                    let comparator = filterObj[key].value.comparator;\n                    current.action=comparator;\n                    debugger;\n                    break;\n                }\n                case 'NumberFilter': {\n                    debugger;\n                    let filterValue = filterObj[key].value.number;\n                    current.value=filterValue;\n                    let comparator = filterObj[key].value.comparator;\n                    current.action=comparator;\n                    debugger;\n                    break;\n                }\n                default: {\n                    filterValue = filterObj[key].value;\n                    current.value=filterValue;\n                    debugger;\n                    break;\n                }\n            }\n            arr.push(current);\n            debugger;\n        }\n        this.setState({filter:arr},this.getAllObject);\n    }\n     onAfterSaveCell(row, cellName, cellValue) {\n        debugger;\n        sendEditCell(row, cellName, cellValue)\n\n    }\n    remote(remoteObj) {\n        remoteObj.sort=true;\n        remoteObj.filter=true;\n        return remoteObj;\n    }\n    onRowSelect(row, isSelected, e) {\n        debugger;\n        if(isSelected) {\n            this.setState(({selectedRow}) => ({\n                selectedRow: new Set(selectedRow).add(row)\n            }));\n        }\n        else{\n            if(this.state.selectedRow.size<=1){\n                this.setState(({selectedRow}) => ({\n                    selectedRow: new Set()\n                }));\n            }else {\n                new Set(this.state.selectedRow).delete(row);\n                this.setState(({selectedRow}) => ({\n                    selectedRow: new Set(this.state.selectedRow)\n                }));\n            }\n        }\n\n    }\n\n    render(){\n        const options = {\n            hideSizePerPage: true,\n            sizePerPage: 5,\n            deleteBtn: this.createCustomDeleteButton,\n            insertBtn: this.createCustomInsertButton,\n            onSortChange: this.onSortChange,\n            onFilterChange: this.onFilterChange,\n            afterDeleteRow: onAfterDeleteRow,// A hook for after insert rows\n        };\n        const selectRowProp = {\n            mode: 'checkbox',\n            columnWidth: '2%',\n            onSelect: this.onRowSelect,\n        };\n        const cellEditProp = {\n            mode: 'dbclick', // 'dbclick' for trigger by double-click\n            afterSaveCell: sendEditCell,\n            blurToSave: true\n        }\n\n\n        const currentPage=Math.ceil(this.state.allSizeList/this.state.sizePage);\n        debugger;\n        return (\n                <div>\n                <BootstrapTable\n                                remote\n                                data={this.state.data}\n                                dataField='id'\n                                tdStyle={ { whiteSpace: 'normal' } }\n                                insertRow\n                                cellEdit={cellEditProp}\n                                selectRow={ selectRowProp }\n                                deleteRow={ true }\n                                options={ options }\n                                striped\n                                hover\n                                containerClass='table'\n                                >\n                    <TableHeaderColumn isKey\n                                       dataSort\n                                       dataField='id'\n                                       headerAlign=\"left\"\n                                       width=\"2%\"\n                                       >\n                        ID\n                    </TableHeaderColumn>\n\n                    <TableHeaderColumn dataField='name'\n                                       dataSort\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"4%\"\n                                       filter={ { type: 'TextFilter' } }\n                                       >\n\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='impactSpeed'\n                                       dataSort\n                                       filter={ { type: 'NumberFilter' } }\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"5%\"\n\n                                       editable={ { type: 'number' } }>\n                        impactSpeed\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='typeWeapon'\n                                       dataSort\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"5%\"\n                                       filter={ { type: 'SelectFilter', options: typeWeapon} }\n                                       editable={ { type: 'select', options: { values: typeWeapon } } }>\n                        weaponType\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='typeMood'\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"5%\"\n                                       dataSort={ true }\n                                       filter={ { type: 'SelectFilter', options: typeMood} }\n                                       editable={ { type: 'select', options: { values: typeMood } } }>\n                        moodType\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='X'\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"5%\"\n                                       dataSort\n                                       filter={ { type: 'NumberFilter' } }\n                                       editable={ { type: 'number' }} >\n                        x\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='Y'\n                                       dataAlign='center'\n                                       dataSort\n                                       headerAlign=\"center\"\n                                       width=\"5%\"\n                                       filter={ { type: 'NumberFilter' } }\n                                       editable={ { type: 'number' , options: { min: '0', max: '369' } } }>\n                        y\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='date'\n                                       dataAlign='center'\n                                       dataSort\n                                       headerAlign=\"center\"\n                                       width=\"7%\"\n                                       filter={ { type: 'DateFilter' } }\n                                       editable={ { type: 'date'  }}>\n                        date\n\n                    </TableHeaderColumn>\n\n                    <TableHeaderColumn dataField='realHero'\n                                       dataSort\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"2%\"\n                                       filter={ { type: 'SelectFilter', options: bool_val} }\n                                       editable={ { type: 'checkbox'  }}>\n                        R\n                    </TableHeaderColumn>\n                    <TableHeaderColumn dataField='car'\n                                       dataSort\n                                       dataAlign='center'\n                                       headerAlign=\"center\"\n                                       width=\"2%\"\n                                       dataFormat={formatterCar}\n                                       filter={ { type: 'SelectFilter', options: bool_val} }\n                                       editable={ { type: 'checkbox'  }}>\n                        C\n                    </TableHeaderColumn>\n\n\n\n                </BootstrapTable>\n                    <CNav className=\"background-nav justify-content-lg-between\">\n                        <CNavItem className=\" \">\n                                <input  name=\"sizePage\" type=\"number\" onKeyPress={this.handleKeyPress}   value={this.state.sizePage} onChange={this.handleChangeSizePage} />\n                        </CNavItem>\n                        <CNavItem className=\" \">\n                            <ReactPaginate\n                                previousLabel={\"← Previous\"}\n                                nextLabel={\"Next →\"}\n                                pageCount={currentPage}\n                                onPageChange={this.handlePageClick}\n                                containerClassName={\"pagination\"}\n                                previousLinkClassName={\"pagination__link\"}\n                                nextLinkClassName={\"pagination__link\"}\n                                disabledClassName={\"pagination__link--disabled\"}\n                                activeClassName={\"pagination__link--active\"}\n                            />\n                        </CNavItem>\n                    </CNav>\n                </div>\n        );\n    }\n\n    getAllObject() {\n        debugger;\n        let arr_filt=JSON.stringify(this.state.filter);\n        if(arr_filt==='[]')\n        if(arr_filt==='[]')\n            arr_filt=null;\n        debugger;\n        axios.get(path_server+\"humanBeings\", {\n            params:\n                {\n                    sizePage: this.state.sizePage,\n                    numberPage: this.state.currentPage,\n                    sortField:this.state.sort.nameField,\n                    isAsc:this.state.sort.isAscending,\n                    filters:arr_filt\n                },\n            paramsSerializer: params => {\n                return qs.stringify(params)\n            }})\n            .then(res => {\n                debugger;\n                const msg = res.data;\n                if(msg.code ===1){\n                    let k=msg.data;\n                    this.setState({data: k,allSizeList: msg.allSizeList});\n                }\n            });\n    }\n}\n\nexport default withRouter(Table);"]},"metadata":{},"sourceType":"module"}