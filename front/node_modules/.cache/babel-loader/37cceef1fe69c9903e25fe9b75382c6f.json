{"ast":null,"code":"var _jsxFileName = \"/home/stavatar/IdeaProject/University/lab2SOA/labsoa/src/components/Table/TableTeams.js\";\nimport React, { Component } from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport InsertButton from 'react-bootstrap-table/lib/toolbar/InsertButton';\nimport DeleteButton from 'react-bootstrap-table/lib/toolbar/DeleteButton';\nimport '../../css/Table.css';\nimport 'react-bootstrap-table/css/react-bootstrap-table.css';\nimport axios from \"axios\";\nimport { onAfterDeleteRow, sendEditCell, addTeam, makeDepressiveTeam, path_server } from \"../../apiNet\";\nimport { withRouter } from \"react-router-dom\";\nimport { path_server2 } from \"../../apiNet\";\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport qs from 'qs';\nimport { Button, Modal } from \"react-bootstrap\";\nimport NameForm from \"../Forms/CreateForms\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction formatterTeam(cell, row) {\n  if (cell === null) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"-\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 16\n  }, this);\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Id: \", cell[0].id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Name: \", cell[0].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n}\n\nclass TableTeams extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createCustomDeleteButton = onClick => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.nameTeamForDepressive,\n          onChange: this.handleChangeTeamNameForDepressive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          size: \"\",\n          btnText: \"Make depressive team\",\n          className: \"btn-padding-left-top\",\n          onClick: e => {\n            this.setState(({\n              selectedRow\n            }) => ({\n              selectedRow: new Set()\n            }));\n            makeDepressiveTeam(this.state.nameTeamForDepressive);\n          },\n          children: \" makeDepressiveTeam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    };\n\n    debugger;\n    console.log(\"!!!+!+!+!+!+!+!+!+!+!+!+!+!+!+!++!+!!+!+\");\n    this.getAllObject = this.getAllObject.bind(this);\n    this.state = {\n      data: [{\n        id: 0,\n        name: \"\",\n        \"team\": \"-\"\n      }],\n      selectedRow: new Set(),\n      nameTeamForDepressive\n    };\n    this.getAllObject();\n    this.timer = setInterval(() => this.getAllObject(), 100000);\n  }\n\n  onRowSelect(row, isSelected, e) {\n    debugger;\n\n    if (isSelected) {\n      this.setState(({\n        selectedRow\n      }) => ({\n        selectedRow: new Set(selectedRow).add(row)\n      }));\n    } else {\n      if (this.state.selectedRow.size <= 1) {\n        this.setState(({\n          selectedRow\n        }) => ({\n          selectedRow: new Set()\n        }));\n      } else {\n        new Set(this.state.selectedRow).delete(row);\n        this.setState(({\n          selectedRow\n        }) => ({\n          selectedRow: new Set(this.state.selectedRow)\n        }));\n      }\n    }\n  }\n\n  componentDidMount() {\n    debugger;\n    this.getAllObject();\n    this.timer = setInterval(() => this.getAllObject(), 100000);\n  }\n\n  render() {\n    const options = {\n      hideSizePerPage: true,\n      sizePerPage: 5,\n      deleteBtn: this.createCustomDeleteButton\n    };\n    const selectRowProp = {\n      mode: 'checkbox',\n      columnWidth: '2%',\n      onSelect: this.onRowSelect\n    };\n    const cellEditProp = {\n      mode: 'dbclick',\n      // 'dbclick' for trigger by double-click\n      afterSaveCell: sendEditCell,\n      blurToSave: true\n    };\n    return /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      remote: true,\n      data: this.state.data,\n      dataField: \"id\",\n      tdStyle: {\n        whiteSpace: 'normal'\n      },\n      cellEdit: cellEditProp,\n      selectRow: selectRowProp,\n      deleteRow: true,\n      options: options,\n      striped: true,\n      hover: true,\n      containerClass: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        isKey: true,\n        dataSort: true,\n        dataField: \"id\",\n        headerAlign: \"left\",\n        width: \"1%\",\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"name\",\n        dataSort: true,\n        dataAlign: \"center\",\n        headerAlign: \"center\",\n        width: \"4%\",\n        filter: {\n          type: 'TextFilter'\n        },\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"team\",\n        dataSort: true,\n        dataAlign: \"center\",\n        headerAlign: \"center\",\n        width: \"2%\",\n        dataFormat: formatterTeam,\n        children: \"Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this);\n  }\n\n  getAllObject() {\n    axios.get(path_server2 + \"all\").then(res => {\n      const msg = res.data;\n      debugger;\n\n      if (msg.code === 1) {\n        let k = msg.data;\n        console.log(\"K=====\" + k);\n        this.setState({\n          data: k\n        });\n        debugger;\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n}\n\nexport default _c = withRouter(TableTeams);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/stavatar/IdeaProject/University/lab2SOA/labsoa/src/components/Table/TableTeams.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","InsertButton","DeleteButton","axios","onAfterDeleteRow","sendEditCell","addTeam","makeDepressiveTeam","path_server","withRouter","path_server2","qs","Button","Modal","NameForm","formatterTeam","cell","row","id","name","TableTeams","constructor","props","createCustomDeleteButton","onClick","state","nameTeamForDepressive","handleChangeTeamNameForDepressive","e","setState","selectedRow","Set","console","log","getAllObject","bind","data","timer","setInterval","onRowSelect","isSelected","add","size","delete","componentDidMount","render","options","hideSizePerPage","sizePerPage","deleteBtn","selectRowProp","mode","columnWidth","onSelect","cellEditProp","afterSaveCell","blurToSave","whiteSpace","type","get","then","res","msg","code","k","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BootstrapTable,\n    TableHeaderColumn} from 'react-bootstrap-table';\nimport InsertButton from 'react-bootstrap-table/lib/toolbar/InsertButton';\nimport DeleteButton from 'react-bootstrap-table/lib/toolbar/DeleteButton';\nimport '../../css/Table.css';\nimport 'react-bootstrap-table/css/react-bootstrap-table.css'\nimport axios from \"axios\";\nimport {onAfterDeleteRow, sendEditCell, addTeam, makeDepressiveTeam, path_server} from \"../../apiNet\"\nimport {withRouter} from \"react-router-dom\";\nimport {path_server2} from \"../../apiNet\";\n\nimport 'react-bootstrap-table/dist/react-bootstrap-table.min.css';\nimport qs from 'qs';\nimport {Button, Modal} from \"react-bootstrap\";\nimport NameForm from \"../Forms/CreateForms\";\nimport 'bootstrap/dist/css/bootstrap.min.css';;\nfunction formatterTeam(cell, row) {\n    if (cell===null)\n        return <span>-</span>\n    debugger;\n    return <div>\n        <span>Id: {cell[0].id}</span>\n        <br/>\n        <span>Name: {cell[0].name}</span>\n    </div>\n}\nclass TableTeams extends React.Component{\n    constructor(props) {\n        super(props);\n        debugger;\n        console.log(\"!!!+!+!+!+!+!+!+!+!+!+!+!+!+!+!++!+!!+!+\");\n\n        this.getAllObject=this.getAllObject.bind(this);\n\n        this.state = { data:[{id:0,name:\"\",\"team\":\"-\"}],\n                       selectedRow:new Set(),\n            nameTeamForDepressive\n        };\n        this.getAllObject();\n        this.timer = setInterval(() => this.getAllObject(), 100000);\n\n    }\n    onRowSelect(row, isSelected, e) {\n        debugger;\n        if(isSelected) {\n            this.setState(({selectedRow}) => ({\n                selectedRow: new Set(selectedRow).add(row)\n            }));\n        }\n        else{\n            if(this.state.selectedRow.size<=1){\n                this.setState(({selectedRow}) => ({\n                    selectedRow: new Set()\n                }));\n            }else {\n                new Set(this.state.selectedRow).delete(row);\n                this.setState(({selectedRow}) => ({\n                    selectedRow: new Set(this.state.selectedRow)\n                }));\n            }\n        }\n\n    }\n    createCustomDeleteButton = (onClick) => {\n        return (\n            <div className=\"margin\">\n                <label >Name team</label>\n                <input  type=\"text\" value={this.state.nameTeamForDepressive} onChange={this.handleChangeTeamNameForDepressive} />\n                <DeleteButton\n                    size=\"\"\n                    btnText='Make depressive team'\n                    className=\"btn-padding-left-top\"\n                    onClick={ e => {   this.setState(({selectedRow}) => ({selectedRow: new Set()}));\n                        makeDepressiveTeam(this.state.nameTeamForDepressive\n                        ) }}> makeDepressiveTeam</DeleteButton>\n                <br/>\n                <br/>\n            </div>\n        )};\n\n    componentDidMount() {\n        debugger;\n        this.getAllObject();\n        this.timer = setInterval(() => this.getAllObject(), 100000);\n    }\n    render() {\n        const options = {\n            hideSizePerPage: true,\n            sizePerPage: 5,\n            deleteBtn: this.createCustomDeleteButton,\n        };\n        const selectRowProp = {\n            mode: 'checkbox',\n            columnWidth: '2%',\n            onSelect: this.onRowSelect,\n        };\n        const cellEditProp = {\n            mode: 'dbclick', // 'dbclick' for trigger by double-click\n            afterSaveCell: sendEditCell,\n            blurToSave: true\n        }\n\n        return ( <BootstrapTable\n            remote\n            data={this.state.data}\n            dataField='id'\n            tdStyle={ { whiteSpace: 'normal' } }\n            cellEdit={cellEditProp}\n            selectRow={ selectRowProp }\n            deleteRow={ true }\n            options={ options }\n            striped\n            hover\n            containerClass='table'\n        >\n            <TableHeaderColumn isKey\n                               dataSort\n                               dataField='id'\n                               headerAlign=\"left\"\n                               width=\"1%\"\n            >\n                ID\n            </TableHeaderColumn>\n\n            <TableHeaderColumn dataField='name'\n                               dataSort\n                               dataAlign='center'\n                               headerAlign=\"center\"\n                               width=\"4%\"\n                               filter={ { type: 'TextFilter' } }\n            >\n                Name\n            </TableHeaderColumn>\n\n                <TableHeaderColumn dataField='team'\n                                   dataSort\n                                   dataAlign='center'\n                                   headerAlign=\"center\"\n                                   width=\"2%\"\n                                   dataFormat={formatterTeam}\n                >\n                    Team\n                </TableHeaderColumn>\n        </BootstrapTable>\n        )\n    }\n\n    getAllObject() {\n        axios.get(path_server2+\"all\")\n            .then(res => {\n                const msg = res.data;\n                debugger;\n                if(msg.code ===1){\n                    let k=msg.data;\n                    console.log(\"K=====\"+ k)\n                    this.setState({data: k});\n                    debugger;\n                }\n            }).catch(err => {\n                console.log(err);\n        });\n    }\n\n\n}\n\nexport default withRouter(TableTeams);"]},"metadata":{},"sourceType":"module"}