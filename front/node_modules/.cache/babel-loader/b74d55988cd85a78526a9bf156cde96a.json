{"ast":null,"code":"import axios from \"axios\";\nimport { NotificationManager } from \"react-notifications\"; //export const path_server=\"http://localhost:8181/\";\n\nexport const path_server = \"http://localhost:8081/LABSOA1_war/\";\nexport const path_server2 = \"http://localhost:8080/lab/tean/\"; //export  const path_server = \"http://desktop-biptr25:8085/Servlets-1.0-SNAPSHOT/\";\n//export  const path_server = \"http://localhost:8181/Servlets-1.0-SNAPSHOT\";\n\nfunction printMessages(msg) {\n  debugger;\n\n  if (msg.code === 0) {\n    NotificationManager.error(msg.data, 'Ошибка', 2000);\n  } else {\n    NotificationManager.success(msg.data, 'Успех!', 2000);\n  }\n}\n\nexport function deleteMood(mood, hist) {\n  debugger;\n  axios.post(path_server + \"deleteAllForMood\", null, {\n    params: {\n      \"mood\": String(mood.typeMood)\n    }\n  }).then(res => {\n    const msg = res.data;\n    printMessages(msg);\n    window.location.reload();\n  });\n}\nexport function calcAverage() {\n  axios.get(path_server + \"averageSpeed\").then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n  });\n}\nexport function countMood(mood) {\n  axios.get(path_server + \"countHuman\", {\n    params: {\n      \"mood\": mood\n    }\n  }).then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n  });\n}\nexport function addObj(new_obj, hist) {\n  new_obj.coordinates = {\n    x: new_obj.X,\n    y: new_obj.Y\n  };\n  debugger;\n  axios.post(path_server + \"humanBeings/\", new_obj).then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n  }).catch(err => {\n    // what now?\n    debugger;\n    console.log(err);\n  });\n}\nexport function addTeam(new_obj, name_team) {\n  debugger;\n  let ids = [];\n\n  for (let human of new_obj) {\n    ids.push(human.id);\n  }\n\n  axios.post(path_server2 + \"create/id/name\", {\n    \"nameTeam\": name_team,\n    \"idhumans\": ids\n  }).then(res => {\n    debugger;\n    const msg = res.data;\n    debugger;\n  });\n}\nexport function makeDepressiveTeam(id) {\n  debugger;\n  axios.put(path_server2 + id + \"/make-depressive\", {}).then(response => {\n    console.log(response);\n  });\n}\nexport function onAfterDeleteRow(row) {\n  debugger;\n  let g = row.length;\n\n  for (let i = 0; i < g; i++) {\n    axios.delete(path_server + \"humanBeings/\" + row[i]).then(res => {\n      debugger;\n      const msg = res.data;\n      printMessages(msg);\n      window.location.reload();\n    });\n  }\n\n  debugger;\n}\nexport function sendEditCell(row, cellName, cellValue) {\n  debugger;\n  axios.put(path_server + \"humanBeings\", {\n    id: row[\"id\"],\n    fieldName: cellName,\n    newValue: cellValue\n  }).then(res => {\n    debugger;\n    const msg = res.data;\n    printMessages(msg);\n    window.location.reload();\n  });\n}","map":{"version":3,"sources":["/home/stavatar/IdeaProject/University/lab2SOA/labsoa/src/apiNet.js"],"names":["axios","NotificationManager","path_server","path_server2","printMessages","msg","code","error","data","success","deleteMood","mood","hist","post","params","String","typeMood","then","res","window","location","reload","calcAverage","get","countMood","addObj","new_obj","coordinates","x","X","y","Y","catch","err","console","log","addTeam","name_team","ids","human","push","id","makeDepressiveTeam","put","response","onAfterDeleteRow","row","g","length","i","delete","sendEditCell","cellName","cellValue","fieldName","newValue"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {NotificationManager} from \"react-notifications\";\n//export const path_server=\"http://localhost:8181/\";\n\nexport const path_server=\"http://localhost:8081/LABSOA1_war/\";\nexport const path_server2=\"http://localhost:8080/lab/tean/\";\n\n//export  const path_server = \"http://desktop-biptr25:8085/Servlets-1.0-SNAPSHOT/\";\n//export  const path_server = \"http://localhost:8181/Servlets-1.0-SNAPSHOT\";\n\n\nfunction printMessages(msg){\n    debugger;\n    if(msg.code===0){\n        NotificationManager.error( msg.data, 'Ошибка',2000);\n    }else {\n        NotificationManager.success( msg.data, 'Успех!',2000);\n    }\n}\nexport function deleteMood(mood,hist){\n    debugger;\n\n    axios.post(path_server+\"deleteAllForMood\",null,{params:{\"mood\": String(mood.typeMood)}})\n        .then(res => {\n\n            const msg = res.data;\n            printMessages(msg);\n            window.location.reload();\n        })\n\n}\n\n\nexport function calcAverage(){\n    axios.get(path_server+\"averageSpeed\")\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n        })\n}\n\nexport function  countMood(mood){\n    axios.get(path_server+\"countHuman\",{params:{\"mood\": mood}})\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n        })\n}\n\nexport  function addObj(new_obj,hist){\n    new_obj.coordinates={\n                            x:new_obj.X,\n                            y:new_obj.Y\n                         }\n    debugger;\n    axios.post(path_server+\"humanBeings/\", new_obj)\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n        }).catch(err => {\n        // what now?\n        debugger;\n        console.log(err);\n    })\n}\nexport  function addTeam(new_obj,name_team){\n    debugger;\n    let ids=[];\n    for (let human of new_obj) {\n        ids.push(human.id);\n    }\n\n    axios.post(path_server2+\"create/id/name\", {\n        \"nameTeam\":name_team,\n        \"idhumans\": ids\n    })\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            debugger;\n        })\n}\nexport  function makeDepressiveTeam(id){\n    debugger;\n    axios.put(path_server2+id+\"/make-depressive\", {})\n        .then(response => {\n            console.log(response);\n        })\n}\nexport  function onAfterDeleteRow(row) {\n    debugger;\n\n    let g = row.length;\n    for(let i=0;i<g;i++){\n        axios.delete(path_server+\"humanBeings/\"+row[i])\n            .then(res => {\n                debugger;\n                const msg = res.data;\n                printMessages(msg);\n                window.location.reload();\n\n            })\n    }\n    debugger;\n}\nexport  function sendEditCell(row, cellName, cellValue) {\n    debugger;\n    axios.put(path_server+\"humanBeings\",{id:row[\"id\"],fieldName:cellName,newValue: cellValue})\n        .then(res => {\n            debugger;\n            const msg = res.data;\n            printMessages(msg);\n            window.location.reload();\n        })\n\n}"]},"metadata":{},"sourceType":"module"}